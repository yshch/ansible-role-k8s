---

# admin

- name: generate admin privatekey
  community.crypto.openssl_privatekey:
    path: "/etc/kubernetes/admin.key"
    size: 2048
- name: generate admin csr
  community.crypto.openssl_csr:
    path: "/etc/kubernetes/admin.csr"
    privatekey_path: "/etc/kubernetes/admin.key"
    common_name: kubernetes-admin
    use_common_name_for_san: false
    subject:
      O: system:masters
    key_usage:
      - Digital Signature
      - Key Encipherment
    key_usage_critical: true
    extended_key_usage:
      - TLS Web Client Authentication
- name: generate admin certificate
  community.crypto.x509_certificate:
    path: "/etc/kubernetes/admin.crt"
    privatekey_path: "/etc/kubernetes/admin.key"
    csr_path: "/etc/kubernetes/admin.csr"
    provider: ownca
    ownca_content: "{{ _k8s_pki_ca_crt }}"
    ownca_privatekey_content: "{{ _k8s_pki_ca_key }}"
    ownca_create_subject_key_identifier: never_create
    ownca_not_after: "+730d"
- name: slurp admin privatekey
  ansible.builtin.slurp:
    src: "/etc/kubernetes/admin.key"
  register: _k8s_pki_admin_key
- name: slurp admin certificate
  ansible.builtin.slurp:
    src: "/etc/kubernetes/admin.crt"
  register: _k8s_pki_admin_crt
- name: generate kubeconfig for admin
  ansible.builtin.template:
    src: etc/kubernetes/kubeconfig.conf.j2
    dest: /etc/kubernetes/admin.conf
    owner: root
    group: root
    mode: 0600
  vars:
    k8s_kubeconfig_ca: "{{ _k8s_pki_ca_crt | b64encode }}"
    k8s_kubeconfig_user: kubernetes-admin
    k8s_kubeconfig_key: "{{ _k8s_pki_admin_key.content }}"
    k8s_kubeconfig_crt: "{{ _k8s_pki_admin_crt.content }}"

# controller-manager

- name: generate controller-manager privatekey
  community.crypto.openssl_privatekey:
    path: "/etc/kubernetes/controller-manager.key"
    size: 2048
- name: generate controller-manager csr
  community.crypto.openssl_csr:
    path: "/etc/kubernetes/controller-manager.csr"
    privatekey_path: "/etc/kubernetes/controller-manager.key"
    common_name: system:kube-controller-manager
    use_common_name_for_san: false
    key_usage:
      - Digital Signature
      - Key Encipherment
    key_usage_critical: true
    extended_key_usage:
      - TLS Web Client Authentication
- name: generate controller-manager certificate
  community.crypto.x509_certificate:
    path: "/etc/kubernetes/controller-manager.crt"
    privatekey_path: "/etc/kubernetes/controller-manager.key"
    csr_path: "/etc/kubernetes/controller-manager.csr"
    provider: ownca
    ownca_content: "{{ _k8s_pki_ca_crt }}"
    ownca_privatekey_content: "{{ _k8s_pki_ca_key }}"
    ownca_create_subject_key_identifier: never_create
    ownca_not_after: "+730d"
- name: slurp controller-manager privatekey
  ansible.builtin.slurp:
    src: "/etc/kubernetes/controller-manager.key"
  register: _k8s_pki_controller_manager_key
- name: slurp controller-manager certificate
  ansible.builtin.slurp:
    src: "/etc/kubernetes/controller-manager.crt"
  register: _k8s_pki_controller_manager_crt
- name: generate kubeconfig for controller-manager
  ansible.builtin.template:
    src: etc/kubernetes/kubeconfig.conf.j2
    dest: /etc/kubernetes/controller-manager.conf
    owner: root
    group: root
    mode: 0600
  vars:
    k8s_kubeconfig_ca: "{{ _k8s_pki_ca_crt | b64encode }}"
    k8s_kubeconfig_user: system:kube-controller-manager
    k8s_kubeconfig_key: "{{ _k8s_pki_controller_manager_key.content }}"
    k8s_kubeconfig_crt: "{{ _k8s_pki_controller_manager_crt.content }}"

# scheduler

- name: generate scheduler privatekey
  community.crypto.openssl_privatekey:
    path: "/etc/kubernetes/scheduler.key"
    size: 2048
- name: generate scheduler csr
  community.crypto.openssl_csr:
    path: "/etc/kubernetes/scheduler.csr"
    privatekey_path: "/etc/kubernetes/scheduler.key"
    common_name: system:kube-scheduler
    use_common_name_for_san: false
    key_usage:
      - Digital Signature
      - Key Encipherment
    key_usage_critical: true
    extended_key_usage:
      - TLS Web Client Authentication
- name: generate scheduler certificate
  community.crypto.x509_certificate:
    path: "/etc/kubernetes/scheduler.crt"
    privatekey_path: "/etc/kubernetes/scheduler.key"
    csr_path: "/etc/kubernetes/scheduler.csr"
    provider: ownca
    ownca_content: "{{ _k8s_pki_ca_crt }}"
    ownca_privatekey_content: "{{ _k8s_pki_ca_key }}"
    ownca_create_subject_key_identifier: never_create
    ownca_not_after: "+730d"
- name: slurp scheduler privatekey
  ansible.builtin.slurp:
    src: "/etc/kubernetes/scheduler.key"
  register: _k8s_pki_scheduler_key
- name: slurp scheduler certificate
  ansible.builtin.slurp:
    src: "/etc/kubernetes/scheduler.crt"
  register: _k8s_pki_scheduler_crt
- name: generate kubeconfig for scheduler
  ansible.builtin.template:
    src: etc/kubernetes/kubeconfig.conf.j2
    dest: /etc/kubernetes/scheduler.conf
    owner: root
    group: root
    mode: 0600
  vars:
    k8s_kubeconfig_ca: "{{ _k8s_pki_ca_crt | b64encode }}"
    k8s_kubeconfig_user: system:kube-scheduler
    k8s_kubeconfig_key: "{{ _k8s_pki_scheduler_key.content }}"
    k8s_kubeconfig_crt: "{{ _k8s_pki_scheduler_crt.content }}"
