---

- name: generate kubelet privatekey
  community.crypto.openssl_privatekey:
    path: "/etc/kubernetes/kubelet.key"
    size: 2048
- name: generate kubelet csr
  community.crypto.openssl_csr:
    path: "/etc/kubernetes/kubelet.csr"
    privatekey_path: "/etc/kubernetes/kubelet.key"
    common_name: "{{ 'system:node:' + ansible_hostname }}"
    use_common_name_for_san: false
    subject:
      O: system:nodes
    key_usage:
      - Digital Signature
      - Key Encipherment
    key_usage_critical: true
    extended_key_usage:
      - TLS Web Client Authentication
- name: generate kubelet certificate
  community.crypto.x509_certificate:
    path: "/etc/kubernetes/kubelet.crt"
    privatekey_path: "/etc/kubernetes/kubelet.key"
    csr_path: "/etc/kubernetes/kubelet.csr"
    provider: ownca
    ownca_content: "{{ _k8s_pki_ca_crt }}"
    ownca_privatekey_content: "{{ _k8s_pki_ca_key }}"
    ownca_create_subject_key_identifier: never_create
    ownca_not_after: "+730d"
- name: slurp kubelet privatekey
  ansible.builtin.slurp:
    src: "/etc/kubernetes/kubelet.key"
  register: _k8s_pki_kubelet_key
- name: slurp kubelet certificate
  ansible.builtin.slurp:
    src: "/etc/kubernetes/kubelet.crt"
  register: _k8s_pki_kubelet_crt
- name: generate kubeconfig for kubelet
  ansible.builtin.template:
    src: etc/kubernetes/kubeconfig.conf.j2
    dest: /etc/kubernetes/kubelet.conf
    owner: root
    group: root
    mode: 0600
  vars:
    k8s_kubeconfig_ca: "{{ _k8s_pki_ca_crt | b64encode }}"
    k8s_kubeconfig_user: "{{ 'system:node:' + ansible_hostname }}"
    k8s_kubeconfig_key: "{{ _k8s_pki_kubelet_key.content }}"
    k8s_kubeconfig_crt: "{{ _k8s_pki_kubelet_crt.content }}"
